{"version":3,"sources":["webpack:///./scripts/app.js"],"names":["MDCRipple","document","querySelector","map","call","querySelectorAll","el","$","hasClass","textField","MDCTextField","useNativeValidation","valid","console","log"],"mappings":";;;QAAA;YAAA;YAEgB,IAAIA,YAAUC,SAASC,cAAc,iBAElC,GAAGC,IAAIC,KAAKH,SAASI,iBAAiB,qBAAoB,SAASC;gBAClF,IAAIC,EAAED,GAAIE,SAAS,sBAAsB;oBACrC,IAAMC,IAAY,IAAIC,eAAaJ;oBAInC,OAHAG,EAAUE,uBAAsB,GAChCF,EAAUG,SAAQ,GAEXH;;gBAEP,IAAMA,IAAY,IAAIC,eAAaJ;gBAGnC,OAFAG,EAAUE,uBAAsB,GAEzBF;;YAIfI,QAAQC,IAAI","file":"js/app.js","sourcesContent":["import {MDCRipple} from '@material/ripple/index';\nimport {MDCTextField} from '@material/textfield';\nconst ripples = new MDCRipple(document.querySelector('.foo-button'));\n\nconst textFields = [].map.call(document.querySelectorAll('.mdc-text-field'), function(el) {\n    if ($(el).hasClass('field--is-invalid')) {\n        const textField = new MDCTextField(el);\n        textField.useNativeValidation = false;\n        textField.valid = false;\n\n        return textField;\n    } else {\n        const textField = new MDCTextField(el);\n        textField.useNativeValidation = false;\n\n        return textField;\n    }\n});\n\nconsole.log('hello world');"],"sourceRoot":""}